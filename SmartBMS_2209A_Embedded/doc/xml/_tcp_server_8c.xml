<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_tcp_server_8c" kind="file" language="C++">
    <compoundname>TcpServer.c</compoundname>
    <includes refid="_tcp_server_8h" local="yes">TcpServer.h</includes>
    <includes refid="_wifi_8h" local="yes">Wifi.h</includes>
    <includes refid="d2cc__lib_8h" local="yes">d2cc_lib.h</includes>
    <incdepgraph>
      <node id="2">
        <label>TcpServer.h</label>
        <link refid="_tcp_server_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Wifi.h</label>
        <link refid="_wifi_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>d2cc_lib.h</label>
        <link refid="d2cc__lib_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/TcpServer.c</label>
        <link refid="_tcp_server_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>errno.h</label>
      </node>
      <node id="13">
        <label>esp_event.h</label>
      </node>
      <node id="4">
        <label>esp_log.h</label>
      </node>
      <node id="15">
        <label>esp_netif.h</label>
      </node>
      <node id="21">
        <label>esp_ping.h</label>
      </node>
      <node id="9">
        <label>esp_system.h</label>
      </node>
      <node id="12">
        <label>esp_wifi.h</label>
      </node>
      <node id="7">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="11">
        <label>freertos/event_groups.h</label>
      </node>
      <node id="8">
        <label>freertos/task.h</label>
      </node>
      <node id="16">
        <label>inttypes.h</label>
      </node>
      <node id="19">
        <label>lwip/netdb.h</label>
      </node>
      <node id="3">
        <label>lwip/sockets.h</label>
      </node>
      <node id="14">
        <label>nvs_flash.h</label>
      </node>
      <node id="20">
        <label>ping/ping_sock.h</label>
      </node>
      <node id="24">
        <label>stdbool.h</label>
      </node>
      <node id="23">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="18">
        <label>sys/time.h</label>
      </node>
      <node id="17">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_tcp_server_8c_1aef135ff19068a2ab235f21f2c833969b" prot="public" static="no">
        <name>TCP_TAG</name>
        <initializer>&quot;TCP_SERVER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tag for logging </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="16" column="9" bodyfile="src/TcpServer.c" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_tcp_server_8c_1adabf6670e12fa284be00ec7af178f57d" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref></type>
        <definition>DbcStruct maindbc_struct</definition>
        <argsstring></argsstring>
        <name>maindbc_struct</name>
        <briefdescription>
<para>Structure to hold CAN message data. </para>
        </briefdescription>
        <detaileddescription>
<para>Extern from main; Structure to hold CAN message data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="13" column="18" bodyfile="src/main.c" bodystart="16" bodyend="-1" declfile="src/TcpServer.c" declline="13" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="_tcp_server_8c_1a9e7b00854cffece2f2025a20b30f4860" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref> *</type>
        <definition>DbcStruct* struct_of_comm</definition>
        <argsstring></argsstring>
        <name>struct_of_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="14" column="18" bodyfile="src/Can.c" bodystart="12" bodyend="-1" declfile="src/TcpServer.c" declline="14" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="_tcp_server_8c_1a19bd4a5dc2066779c571dc423ee2e5fc" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* GUI_USER</definition>
        <argsstring></argsstring>
        <name>GUI_USER</name>
        <initializer>= &quot;root&quot;</initializer>
        <briefdescription>
<para>Username for GUI authentication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="19" column="6" bodyfile="src/TcpServer.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_tcp_server_8c_1a35d706daa4dcd113099247f519235595" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* GUI_PASS</definition>
        <argsstring></argsstring>
        <name>GUI_PASS</name>
        <initializer>= &quot;otto&quot;</initializer>
        <briefdescription>
<para>Password for GUI authentication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="21" column="6" bodyfile="src/TcpServer.c" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_tcp_server_8c_1a71663496e793fd4869a37af2eaeb9dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Create_Server</definition>
        <argsstring>(void *pvParameter)</argsstring>
        <name>Create_Server</name>
        <param>
          <type>void *</type>
          <declname>pvParameter</declname>
        </param>
        <briefdescription>
<para>Creates and starts a TCP server to listen for client connections. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates and starts the TCP server.</para>
<para>This function sets up a TCP socket, binds it to a specified address and port, and listens for incoming connections. For each connection, a new task is created to handle the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Unused parameter for FreeRTOS task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="32" column="6" bodyfile="src/TcpServer.c" bodystart="32" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="_tcp_server_8c_1a423bc60f42ad6bf912e07cd5320b1948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Handle_Client</definition>
        <argsstring>(void *args)</argsstring>
        <name>Handle_Client</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Handles communication with a single client. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles client connections to the TCP server.</para>
<para>This function receives and processes commands from the client, authenticates the user, and manages communication based on different states. It handles login, data requests, and exit commands.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket descriptor for the client. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="96" column="6" bodyfile="src/TcpServer.c" bodystart="96" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int receive_data</definition>
        <argsstring>(int sock, char *buffer, size_t size, uint8_t *timeout_counter, uint8_t max_timeout)</argsstring>
        <name>receive_data</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>timeout_counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>max_timeout</declname>
        </param>
        <briefdescription>
<para>Receives data from the client socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Receives data from a connected client.</para>
<para>This function receives data from the client and handles timeouts. If no data is received within a specified timeout period, it returns a timeout error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket descriptor for the client. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter to track consecutive timeouts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed consecutive timeouts before returning an error.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of received data, -1 if timeout occurs, or -2 if maximum timeouts reached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="239" column="5" bodyfile="src/TcpServer.c" bodystart="239" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="_tcp_server_8c_1af537437f191b86077cd5ae57370572b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConvertToJson</definition>
        <argsstring>(DbcStruct *dbc, char *jsonString)</argsstring>
        <name>ConvertToJson</name>
        <param>
          <type><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref> *</type>
          <declname>dbc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>jsonString</declname>
        </param>
        <briefdescription>
<para>Convert to JSON function of Dbc Parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Converter for Dbc values to JSON. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TcpServer.c" line="256" column="6" bodyfile="src/TcpServer.c" bodystart="256" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="_tcp_server_8c_1a13ddbecdfd3a974bad6c7ff356cb4674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tcp_Init</definition>
        <argsstring>()</argsstring>
        <name>Tcp_Init</name>
        <briefdescription>
<para>Initializes the TCP server and starts listening for client connections. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the TCP server. </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Initialize Wi-Fi in access point and station mode.</para>
<para>&lt; Start the TCP server task.</para>
        </inbodydescription>
        <location file="src/TcpServer.c" line="371" column="6" bodyfile="src/TcpServer.c" bodystart="371" bodyend="378"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>TCP server implementation to handle incoming client connections, authenticate, and exchange data. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>18 December 2024 </para>
</simplesect>
<simplesect kind="author"><para>hakimmc </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tcp_server_8h" kindref="compound">TcpServer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wifi_8h" kindref="compound">Wifi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2cc__lib_8h" kindref="compound">d2cc_lib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref><sp/>*<ref refid="_can_8c_1a9e7b00854cffece2f2025a20b30f4860" kindref="member">struct_of_comm</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_TAG<sp/>&quot;TCP_SERVER&quot;<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_tcp_server_8c_1a19bd4a5dc2066779c571dc423ee2e5fc" kindref="member">GUI_USER</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_tcp_server_8c_1a35d706daa4dcd113099247f519235595" kindref="member">GUI_PASS</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;otto&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_tcp_server_8c_1a71663496e793fd4869a37af2eaeb9dfb" kindref="member">Create_Server</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvParameter)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr_str[128];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr_family;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip_protocol;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>dest_addr;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_addr.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_addr.sin_port<sp/>=<sp/>htons(<ref refid="_tcp_server_8h_1ac42367fe5c999ec6650de83e9d72fe8c" kindref="member">SERVER_PORT</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>addr_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ip_protocol<sp/>=<sp/>IPPROTO_IP;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>inet_ntoa_r(dest_addr.sin_addr,<sp/>addr_str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr_str)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listen_sock<sp/>=<sp/>socket(addr_family,<sp/>SOCK_STREAM,<sp/>ip_protocol);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen_sock<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>create<sp/>socket:<sp/>errno<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>bind(listen_sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;dest_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dest_addr));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>unable<sp/>to<sp/>bind:<sp/>errno<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(listen_sock);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>bound,<sp/>port<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="_tcp_server_8h_1ac42367fe5c999ec6650de83e9d72fe8c" kindref="member">SERVER_PORT</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>listen(listen_sock,<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>occurred<sp/>during<sp/>listen:<sp/>errno<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(listen_sock);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>listening&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>source_addr;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>addr_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(source_addr);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>accept(listen_sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;source_addr,<sp/>&amp;addr_len);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>accept<sp/>connection:<sp/>errno<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="_tcp_server_8h_1aef135ff19068a2ab235f21f2c833969b" kindref="member">TCP_TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpEnable<sp/>=<sp/><ref refid="d2cc__lib_8h_1a4dcf3e762a96610c3ecfc09dbc3b789ea597ff09266346fb6ab08f2af9f0a37b0" kindref="member">TcpEnable_TCP_Connected</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpClientCount++;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TaskHandle_t<sp/>xHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreate(<ref refid="_tcp_server_8h_1a423bc60f42ad6bf912e07cd5320b1948" kindref="member">Handle_Client</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Client_Handler&quot;</highlight><highlight class="normal">,<sp/>4096,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)sock,<sp/>(UBaseType_t)1,<sp/>&amp;xHandle);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>close(listen_sock);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_tcp_server_8c_1a423bc60f42ad6bf912e07cd5320b1948" kindref="member">Handle_Client</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>(int)args;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rx_buffer[32];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>timeout_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>max_timeout<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timeout;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout.tv_sec<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_RCVTIMEO,<sp/>&amp;timeout,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" kindref="member">receive_data</ref>(sock,<sp/>rx_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer)<sp/>-<sp/>1,<sp/>&amp;timeout_counter,<sp/>max_timeout);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_buffer[len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!memcmp(rx_buffer,<sp/></highlight><highlight class="stringliteral">&quot;HELO&quot;</highlight><highlight class="normal">,<sp/>4))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(memcmp(rx_buffer,<sp/></highlight><highlight class="stringliteral">&quot;OBT&quot;</highlight><highlight class="normal">,<sp/>3))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/></highlight><highlight class="stringliteral">&quot;ID?&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" kindref="member">receive_data</ref>(sock,<sp/>rx_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer)<sp/>-<sp/>1,<sp/>&amp;timeout_counter,<sp/>max_timeout);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(state<sp/>&lt;<sp/>3){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/></highlight><highlight class="stringliteral">&quot;EHLO&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" kindref="member">receive_data</ref>(sock,<sp/>rx_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer)<sp/>-<sp/>1,<sp/>&amp;timeout_counter,<sp/>max_timeout);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_buffer[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!memcmp(rx_buffer,<sp/></highlight><highlight class="stringliteral">&quot;login_&quot;</highlight><highlight class="normal">,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>credentials[2];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>login_data<sp/>=<sp/>rx_buffer<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(login_data,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>indx<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>credentials[indx++]<sp/>=<sp/>token;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indx<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>strcmp(<ref refid="_tcp_server_8c_1a19bd4a5dc2066779c571dc423ee2e5fc" kindref="member">GUI_USER</ref>,<sp/>credentials[0])<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strcmp(<ref refid="_tcp_server_8c_1a35d706daa4dcd113099247f519235595" kindref="member">GUI_PASS</ref>,<sp/>credentials[1])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" kindref="member">receive_data</ref>(sock,<sp/>rx_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer)<sp/>-<sp/>1,<sp/>&amp;timeout_counter,<sp/>max_timeout);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>-2<sp/>||<sp/>len<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_buffer[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!memcmp(rx_buffer,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send(sock,<sp/>&quot;OK&quot;,<sp/>2,<sp/>0);<sp/>full<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>jsonString[2048];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_tcp_server_8c_1af537437f191b86077cd5ae57370572b1" kindref="member">ConvertToJson</ref>(<ref refid="_can_8c_1a9e7b00854cffece2f2025a20b30f4860" kindref="member">struct_of_comm</ref>,<sp/>jsonString);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/>jsonString,<sp/>strlen(jsonString),<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!memcmp(rx_buffer,<sp/></highlight><highlight class="stringliteral">&quot;exit&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_buffer[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//memset(,<sp/>0,<sp/>sizeof(rx_buffer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/></highlight><highlight class="stringliteral">&quot;ER&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpClientCount--;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpClientCount<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpEnable<sp/>=<sp/><ref refid="d2cc__lib_8h_1a4dcf3e762a96610c3ecfc09dbc3b789ea44850b21528bd0c90f2fe51bef8c6972" kindref="member">TcpEnable_TCP_Online</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(sock,<sp/></highlight><highlight class="stringliteral">&quot;TO&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpClientCount--;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpClientCount<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpEnable<sp/>=<sp/><ref refid="d2cc__lib_8h_1a4dcf3e762a96610c3ecfc09dbc3b789ea44850b21528bd0c90f2fe51bef8c6972" kindref="member">TcpEnable_TCP_Online</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelete(NULL);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_tcp_server_8c_1a00e67904809f7a47e29ca050bcabbae2" kindref="member">receive_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint8_t*<sp/>timeout_counter,<sp/>uint8_t<sp/>max_timeout)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>recv(sock,<sp/>buffer,<sp/>size,<sp/>0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*timeout_counter)++;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*timeout_counter<sp/>&gt;<sp/>max_timeout)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>*timeout_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_tcp_server_8c_1af537437f191b86077cd5ae57370572b1" kindref="member">ConvertToJson</ref>(<ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref><sp/>*dbc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jsonString)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(jsonString,<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Messages\&quot;:<sp/>{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryChemistry\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Count\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryBalance_MaxVoltage\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryBalance_MinVoltage\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryBalance_MaxTemp\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryBalance_MinTemp\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatterySOC\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;OCV_Voltages\&quot;:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temperatures\&quot;:<sp/>{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX0\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX1\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX2\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX3\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX4\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX5\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX6\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Temp_AUX7\&quot;:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Voltages_1\&quot;:<sp/>{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_1\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_2\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_3\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_4\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_5\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_6\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_7\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_8\&quot;:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Battery_Voltages_2\&quot;:<sp/>{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_9\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_10\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_11\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_12\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_13\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_14\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_15\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;BatteryVoltage_16\&quot;:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Can_Main\&quot;:<sp/>{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;AliveCounter\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;WiFi_AP_Status\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;TcpClientCount\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;CanBusEnable\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;TcpEnable\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;VpnEnable\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;WiFi_ST_Status\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;Reserved_1\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;WiFi_AP_IP_Adrress\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;WiFi_ST_IP_Address\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;SwVersionMajor\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;SwVersionMinor\&quot;:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;SwVersionBugfix\&quot;:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a7a06730f35cb4de82713855e2c0ae1e8" kindref="member">BatteryChemistry</ref>,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a6f1a768f91a5f4a7efbd8332b0054a51" kindref="member">Battery_Count</ref>,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a448ff1f8f3fec4b0cd1ae1da34b72e74" kindref="member">BatteryBalance_MaxVoltage</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a924f2f712aa30711ca07c571e8e51eab" kindref="member">BatteryBalance_MinVoltage</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ad64cfb03672b0c31c2eb92612c8741be" kindref="member">BatteryBalance_MaxTemp</ref>,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a642f31176bf356e0ef022cdf036a143d" kindref="member">BatteryBalance_MinTemp</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a1d3bcb9e8972d1aa1ff1a2cb63fa5e67" kindref="member">BatterySOC</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a5a8965da558df8ef6ec7892fd3515ccb" kindref="member">Battery_Messages</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a423f591df1d0e40cfa745d61e4d3b8d5" kindref="member">OCV_Voltages</ref>,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a1a640baa84507339bfba02cc7bf31ad7" kindref="member">Battery_Temp_AUX0</ref>,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a3be4db5c5288d77a2ffa6f0db21f3fea" kindref="member">Battery_Temp_AUX1</ref>,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a22c4dffa9e3e3ac53ec970d97ec747c2" kindref="member">Battery_Temp_AUX2</ref>,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1af25f603c7a7904294c6f2077b32781ee" kindref="member">Battery_Temp_AUX3</ref>,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a83c3d131f348c17f5d12de4c9700d028" kindref="member">Battery_Temp_AUX4</ref>,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1acc07b2fd0e5db28e1de340e1d4654046" kindref="member">Battery_Temp_AUX5</ref>,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a39855c4f5479dddc01dc1a66b49d3efe" kindref="member">Battery_Temp_AUX6</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1a714a42ccae458b2dae901e11c57c248b" kindref="member">Battery_Temperatures</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1addab4cd6e4fe7e9b2d12f88189475623" kindref="member">Battery_Temp_AUX7</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a8705a64cae747f9fbb1244e2760df0d2" kindref="member">BatteryVoltage_1</ref>,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a6fe7067367840e901fe89d114f22c189" kindref="member">BatteryVoltage_2</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a193c15c2163830869c835c9caa7daf4b" kindref="member">BatteryVoltage_3</ref>,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ae545ca583ee7ac6ff1eb085eed35092e" kindref="member">BatteryVoltage_4</ref>,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a6598e1d949075cd2caa869b58dcefa66" kindref="member">BatteryVoltage_5</ref>,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a01ac4c7d571306e0603ac9b1bdb259cb" kindref="member">BatteryVoltage_6</ref>,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ac1f0836457f5d4220230ea4541e7c4e7" kindref="member">BatteryVoltage_7</ref>,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1ac0df264728127a2bc9cd5b7ba288ee17" kindref="member">Battery_Voltages_1</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a80cffe4315498627e4d30ad49b31474b" kindref="member">BatteryVoltage_8</ref>,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1acca054e9ab7d7105afaebdd7d98084bc" kindref="member">BatteryVoltage_9</ref>,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a0edf95266999cda26bfa64415ab66c11" kindref="member">BatteryVoltage_10</ref>,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1abd9596c665802a643fb055f93553c787" kindref="member">BatteryVoltage_11</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1aa8eb502120446487b97cfb290b071824" kindref="member">BatteryVoltage_12</ref>,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a4297e252aa775556c232c478883f8299" kindref="member">BatteryVoltage_13</ref>,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a479d68e2ca89d790dbefd39a71faa281" kindref="member">BatteryVoltage_14</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ab12c5eecedc581c2760d28755c4015ba" kindref="member">BatteryVoltage_15</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1aa89001e2fb3b0d46bdab24ae246c3b97" kindref="member">Battery_Voltages_2</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a47b822293e314d119ffc67e6d767cafe" kindref="member">BatteryVoltage_16</ref>,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1aafdcafa59c0375ecd8b2bf9e3a53ab53" kindref="member">AliveCounter</ref>,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a9e27bd50ce2d239ca6f1d5f7cb023de7" kindref="member">WiFi_AP_Status</ref>,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a9040957d9669218f0117644dcbc7f1c2" kindref="member">TcpClientCount</ref>,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a96f0ecd6a7074aca0fcfd72592245fad" kindref="member">CanBusEnable</ref>,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a2270f5d54c5392a398ef141186d3366a" kindref="member">TcpEnable</ref>,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ab631e49f6f05106ef5180c4a8db81e54" kindref="member">VpnEnable</ref>,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a4b524004290f7eff13d1280a150bc416" kindref="member">WiFi_ST_Status</ref>,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1aea70d67acc702c88ae08d881a525b194" kindref="member">Reserved_1</ref>,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1a8f3b2251faf8a9f0240027876c23a975" kindref="member">WiFi_AP_IP_Adrress</ref>,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ad6902200ed6c439d771df6641d267682" kindref="member">WiFi_ST_IP_Address</ref>,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1acd25bf8ccca66642eec649623550c36a" kindref="member">SwVersionMajor</ref>,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1aef00c82a9c81580820ff10e499b6ed21" kindref="member">SwVersionMinor</ref>,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbc-&gt;<ref refid="struct_dbc_struct_1afad3e459a38651a13db4dd06594bd382" kindref="member">Can_Main</ref>.<ref refid="struct_dbc_struct_1ae386297eca66f54a6da88c162813e6dc" kindref="member">Signal</ref>.<ref refid="struct_dbc_struct_1ab712e03d069028bd782d5a3bf63fbbcd" kindref="member">SwVersionBugfix</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_tcp_server_8c_1a13ddbecdfd3a974bad6c7ff356cb4674" kindref="member">Tcp_Init</ref>()</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_wifi_8h_1a13bb3ba68519d8aa7c2a72cf22dc2b21" kindref="member">wifi_init_ap_sta</ref>();<sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.WiFi_AP_Status<sp/>=<sp/><ref refid="d2cc__lib_8h_1a0dfaaec7a9710a611afee9a79657d4b8af5bbea2d1323b30787a1211c231415c9" kindref="member">WiFi_AP_Status_WiFi_Ap_Connected</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.WiFi_ST_Status<sp/>=<sp/><ref refid="d2cc__lib_8h_1ad00d3bb37c1d69ea203ae4019a832403a535d52df00b0815ec4b6a8912a8a0d99" kindref="member">WiFi_ST_Status_WiFi_Ap_Connected</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_8c_1adabf6670e12fa284be00ec7af178f57d" kindref="member">maindbc_struct</ref>.Can_Main.Signal.TcpEnable<sp/>=<sp/><ref refid="d2cc__lib_8h_1a4dcf3e762a96610c3ecfc09dbc3b789ea44850b21528bd0c90f2fe51bef8c6972" kindref="member">TcpEnable_TCP_Online</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreate(<ref refid="_tcp_server_8h_1a71663496e793fd4869a37af2eaeb9dfb" kindref="member">Create_Server</ref>,<sp/></highlight><highlight class="stringliteral">&quot;tcp_server&quot;</highlight><highlight class="normal">,<sp/>4096,<sp/>NULL,<sp/>(UBaseType_t)5,<sp/>NULL);<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/TcpServer.c"/>
  </compounddef>
</doxygen>
