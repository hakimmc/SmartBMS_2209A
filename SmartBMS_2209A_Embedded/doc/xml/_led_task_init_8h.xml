<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_led_task_init_8h" kind="file" language="C++">
    <compoundname>LedTaskInit.h</compoundname>
    <includes local="yes">stdint.h</includes>
    <includedby refid="_led_task_init_8c" local="yes">src/LedTaskInit.c</includedby>
    <includedby refid="_uart_8c" local="yes">src/Uart.c</includedby>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/LedTaskInit.h</label>
        <link refid="_led_task_init_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/LedTaskInit.h</label>
        <link refid="_led_task_init_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/LedTaskInit.c</label>
        <link refid="_led_task_init_8c"/>
      </node>
      <node id="3">
        <label>src/Uart.c</label>
        <link refid="_uart_8c"/>
      </node>
      <node id="4">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_led_task_init_8h_1ac3698c9d80d8a1abde24708cc9fdb1ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpio_init</definition>
        <argsstring>(uint8_t gpio_pin)</argsstring>
        <name>gpio_init</name>
        <param>
          <type>uint8_t</type>
          <declname>gpio_pin</declname>
        </param>
        <briefdescription>
<para>Initializes a GPIO pin for LED control. </para>
        </briefdescription>
        <detaileddescription>
<para>Configures the specified GPIO pin as an output to control an LED.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gpio_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPIO pin number to initialize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Initializes a GPIO pin for LED control.</para>
<para>This function configures the given GPIO pin for output mode with no pull-up or pull-down resistors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gpio_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPIO pin number to initialize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; No interrupt triggered.</para>
<para>&lt; Set GPIO mode to output.</para>
<para>&lt; Pin mask for the specified GPIO pin.</para>
<para>&lt; Disable pull-down resistor.</para>
<para>&lt; Disable pull-up resistor.</para>
        </inbodydescription>
        <location file="include/LedTaskInit.h" line="24" column="6" bodyfile="src/LedTaskInit.c" bodystart="23" bodyend="34" declfile="include/LedTaskInit.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_led_task_init_8h_1a1f53ce317fca339ddc6588adb1a457e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void led_init</definition>
        <argsstring>(void *pvParameter)</argsstring>
        <name>led_init</name>
        <param>
          <type>void *</type>
          <declname>pvParameter</declname>
        </param>
        <briefdescription>
<para>Task to initialize and control LED behavior. </para>
        </briefdescription>
        <detaileddescription>
<para>This function serves as an entry point for a FreeRTOS task, handling LED initialization and operation based on the provided parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters (optional).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Task to initialize and control LED behavior.</para>
<para>This task initializes the LED GPIO pin and continuously toggles the LED state with a 500 ms delay.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to task-specific parameters (unused). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Initialize the LED GPIO pin.</para>
<para>&lt; Turn the LED on.</para>
<para>&lt; Delay for 500 ms.</para>
<para>&lt; Turn the LED off.</para>
<para>&lt; Delay for 500 ms.</para>
        </inbodydescription>
        <location file="include/LedTaskInit.h" line="34" column="6" bodyfile="src/LedTaskInit.c" bodystart="43" bodyend="53" declfile="include/LedTaskInit.h" declline="34" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>LED initialization and control tasks for ESP32. </para>
    </briefdescription>
    <detaileddescription>
<para>This header file provides declarations for initializing GPIO pins and creating LED-related tasks for the ESP32.</para>
<para>Created on: 18 Dec 2024 <simplesect kind="author"><para>hakimmc </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_LEDTASKINIT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_LEDTASKINIT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_task_init_8h_1ac3698c9d80d8a1abde24708cc9fdb1ee" kindref="member">gpio_init</ref>(uint8_t<sp/>gpio_pin);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_task_init_8h_1a1f53ce317fca339ddc6588adb1a457e4" kindref="member">led_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvParameter);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_LEDTASKINIT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/LedTaskInit.h"/>
  </compounddef>
</doxygen>
