<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_can_8h" kind="file" language="C++">
    <compoundname>Can.h</compoundname>
    <includes local="yes">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">freertos/queue.h</includes>
    <includes local="yes">freertos/semphr.h</includes>
    <includes local="yes">esp_err.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">driver/twai.h</includes>
    <includes refid="d2cc__lib_8h" local="yes">d2cc_lib.h</includes>
    <includedby refid="_can_8c" local="yes">src/Can.c</includedby>
    <includedby refid="_uart_8c" local="yes">src/Uart.c</includedby>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/Can.h</label>
        <link refid="_can_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>d2cc_lib.h</label>
        <link refid="d2cc__lib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>driver/twai.h</label>
      </node>
      <node id="9">
        <label>esp_err.h</label>
      </node>
      <node id="10">
        <label>esp_log.h</label>
      </node>
      <node id="5">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="7">
        <label>freertos/queue.h</label>
      </node>
      <node id="8">
        <label>freertos/semphr.h</label>
      </node>
      <node id="6">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/Can.h</label>
        <link refid="_can_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/Can.c</label>
        <link refid="_can_8c"/>
      </node>
      <node id="3">
        <label>src/Uart.c</label>
        <link refid="_uart_8c"/>
      </node>
      <node id="4">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_can_8h_1aa0e0a9f9b6b180a338070cd1da9f6960" prot="public" static="no">
        <name>TX_GPIO_NUM</name>
        <initializer>5</initializer>
        <briefdescription>
<para>GPIO pin number for CAN TX. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="31" column="9" bodyfile="include/Can.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_can_8h_1a105aacd025d247748462e6cce43eb816" prot="public" static="no">
        <name>RX_GPIO_NUM</name>
        <initializer>4</initializer>
        <briefdescription>
<para>GPIO pin number for CAN RX. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="37" column="9" bodyfile="include/Can.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_can_8h_1a4791c142b857f44449cc8ad8d22ef045" prot="public" static="no">
        <name>CAN_TAG</name>
        <initializer>&quot;CAN_MASTER&quot;</initializer>
        <briefdescription>
<para>Tag for logging CAN-related messages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="43" column="9" bodyfile="include/Can.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_can_8h_1ac5d0198b7447cc2c29044ccd56dd9443" prot="public" static="no">
        <name>CAN_DELAY</name>
        <initializer>250</initializer>
        <briefdescription>
<para>Delay in milliseconds for CAN tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="49" column="9" bodyfile="include/Can.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_can_8h_1a8920d0f7ab8095cccb447da8d5fae390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Can_Init</definition>
        <argsstring>(twai_general_config_t can_gpio_config, twai_timing_config_t can_time_config, twai_filter_config_t can_filter_config)</argsstring>
        <name>Can_Init</name>
        <param>
          <type>twai_general_config_t</type>
          <declname>can_gpio_config</declname>
        </param>
        <param>
          <type>twai_timing_config_t</type>
          <declname>can_time_config</declname>
        </param>
        <param>
          <type>twai_filter_config_t</type>
          <declname>can_filter_config</declname>
        </param>
        <briefdescription>
<para>Initializes the CAN interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Configures the CAN interface with the specified general, timing, and filter configurations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_gpio_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration for CAN GPIO pins. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_time_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Timing configuration for CAN communication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_filter_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter configuration for CAN messages. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success or a non-zero value if initialization fails.</para>
</simplesect>
Initializes the CAN interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_gpio_config</parametername>
</parameternamelist>
<parameterdescription>
<para>General configuration for the CAN GPIO pins and mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_time_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Timing configuration for the CAN bus (e.g., bitrate). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_filter_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter configuration for message acceptance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t Returns 1 if the driver is successfully initialized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="61" column="9" bodyfile="src/Can.c" bodystart="22" bodyend="29" declfile="include/Can.h" declline="61" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="_can_8h_1a51dc04f4c5f5a544e73c33e2d606193b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Can_Transmit</definition>
        <argsstring>(twai_message_t message, uint8_t data[])</argsstring>
        <name>Can_Transmit</name>
        <param>
          <type>twai_message_t</type>
          <declname>message</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Transmits a CAN message. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends a CAN message with the specified data through the CAN interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The TWAI message structure to transmit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data array to be transmitted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success or a non-zero value if transmission fails.</para>
</simplesect>
Transmits a CAN message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The CAN message structure to transmit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data array to be sent with the message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t Returns 1 if the transmission is successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="72" column="9" bodyfile="src/Can.c" bodystart="38" bodyend="45" declfile="include/Can.h" declline="72" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="_can_8h_1a99ef09684458d26b79a4185bc0af934b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CanReporter</definition>
        <argsstring>(void *pvParameter)</argsstring>
        <name>CanReporter</name>
        <param>
          <type>void *</type>
          <declname>pvParameter</declname>
        </param>
        <briefdescription>
<para>Task to report CAN messages. </para>
        </briefdescription>
        <detaileddescription>
<para>A FreeRTOS task that handles CAN communication and reporting.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task-specific parameters (optional).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Task to report CAN messages.</para>
<para>This function initializes the CAN driver and repeatedly transmits preconfigured CAN messages, using data from the <computeroutput><ref refid="struct_dbc_struct" kindref="compound">DbcStruct</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to any parameters passed to the task (unused). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Can.h" line="81" column="6" bodyfile="src/Can.c" bodystart="62" bodyend="92" declfile="include/Can.h" declline="81" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CAN communication interface for ESP32. </para>
    </briefdescription>
    <detaileddescription>
<para>This header file provides declarations for initializing and managing CAN (Controller Area Network) communication on the ESP32 using the TWAI (Two-Wire Automotive Interface) driver.</para>
<para>Created on: 18 Dec 2024 <simplesect kind="author"><para>hakimmc </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_CAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_CAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_err.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/twai.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2cc__lib_8h" kindref="compound">d2cc_lib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_can_8h_1aa0e0a9f9b6b180a338070cd1da9f6960" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_GPIO_NUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_can_8h_1a105aacd025d247748462e6cce43eb816" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_GPIO_NUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="_can_8h_1a4791c142b857f44449cc8ad8d22ef045" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_TAG<sp/>&quot;CAN_MASTER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_can_8h_1ac5d0198b7447cc2c29044ccd56dd9443" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_DELAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>250<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">uint8_t<sp/><ref refid="_can_8h_1a8920d0f7ab8095cccb447da8d5fae390" kindref="member">Can_Init</ref>(twai_general_config_t<sp/>can_gpio_config,<sp/>twai_timing_config_t<sp/>can_time_config,<sp/>twai_filter_config_t<sp/>can_filter_config);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">uint8_t<sp/><ref refid="_can_8h_1a51dc04f4c5f5a544e73c33e2d606193b" kindref="member">Can_Transmit</ref>(twai_message_t<sp/>message,<sp/>uint8_t<sp/>data[]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_can_8h_1a99ef09684458d26b79a4185bc0af934b" kindref="member">CanReporter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvParameter);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_CAN_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/Can.h"/>
  </compounddef>
</doxygen>
